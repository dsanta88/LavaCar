@page "/empresa-index"
@using LavaCar.Shared
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject DialogService dialogService
@inject ServicioSingleton singleton
@using Newtonsoft.Json

<div class="row alert bg-info">
    <div class="col-md-5">
        <h5> <b>EMPRESA</b></h5>
    </div>
</div>
<RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="20"
            AllowSorting="true" Data="@list" TItem="Empresa" ColumnWidth="200px">
    <Columns>
        <RadzenGridColumn TItem="Empresa" Property="Nombre" Title="Nombre"></RadzenGridColumn>
        <RadzenGridColumn TItem="Empresa" Property="Telefono" Title="Telefono" Width="50%"></RadzenGridColumn>
        <RadzenGridColumn TItem="Empresa" Property="Direccion" Title="Direccion" Width="50%"></RadzenGridColumn>
        <RadzenGridColumn TItem="Empresa" Property="Logo" Title="Logo">
            <Template Context="model">
                <RadzenImage Path="@model.Logo" Style="width:150px" />
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Empresa" Context="Empresa" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Left" Width="100%">
            <Template Context="Empresa">
                <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="view_list" Text="Sedes" Size="ButtonSize.Medium" Click="@((args) =>Sedes(Empresa.Id))">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="edit" Text="Editar" Size="ButtonSize.Medium" Click="@((args) =>Edit(Empresa.Id))">
                </RadzenButton>
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>


@code {
    private Response response;
    List<Empresa> list = new List<Empresa>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }


    void Edit(int id)
    {

        dialogService.Open<Form>("Editar Empresa",
        new Dictionary<string, object>() { { "Id", singleton.EmpresaId } },
        new DialogOptions() { Width = "800px", Height = "700px"});

        dialogService.OnClose += RelaodDashBoard;

    }

    void RelaodDashBoard(dynamic result)
    {
        if(result!=null)
        {
            list = JsonConvert.DeserializeObject<List<Empresa>>(result.Data.ToString());
            StateHasChanged();
        }

    }

    public void Sedes(int id)
    {
        navigationManager.NavigateTo("/sede-index/" + id);
    }


    protected async Task LoadData()
    {
        response = await Http.GetFromJsonAsync<Response>($"Empresas/{singleton.EmpresaId}");
        if (response.IsSuccessful)
        {
            list = JsonConvert.DeserializeObject<List<Empresa>>(response.Data.ToString());
        }
    }
}

