@page "/formempresa"
@page "/formempresa/{Id:int}"
@using LavaCar.Shared
@inject HttpClient Http
@inject NavigationManager navigationManager
@using Newtonsoft.Json;
@inject IJSRuntime js
@inject DialogService dialogService
@inject ServicioSingleton singleton

<div class="row">
    <div class="col-md-12">
        <RadzenTemplateForm TItem="Empresa" Data=@model Submit="@Save">
            <RadzenFieldset Text="Sede">
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Nombre" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Nombre)" Name="Nombre">
                        </RadzenTextBox><br />
                        <RadzenRequiredValidator Component="Nombre" Text="Campo Requerido" Style="position: absolute" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Dirección" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Direccion)" Name="Direccion">
                        </RadzenTextBox><br />
                        <RadzenRequiredValidator Component="Direccion" Text="Campo Requerido" Style="position: absolute" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Teléfono" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Telefono)" Name="Telefono">
                        </RadzenTextBox><br />
                        <RadzenRequiredValidator Component="Telefono" Text="Campo Requerido" Style="position: absolute" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Logo" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="display: block; width: 100%" @bind-Value="@(model.Logo)" Name="Logo">
                        </RadzenTextBox>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-2"></div>
                    <div class="col-md-4">
                        <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Guardar" ButtonStyle="ButtonStyle.Success">
                        </RadzenButton>
                    </div>
                    <div class="col-md-4">
                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="cancel" Text="Cancelar" Click="@Cancelar">
                        </RadzenButton>
                    </div>
                </div>
            </RadzenFieldset>
        </RadzenTemplateForm>
    </div>
</div>
<br />
@code {

    [Parameter]
    public int Id { get; set; }
    string titulo = "";
    public Empresa model = new Empresa();
    Response response = new Response();


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    protected async Task Save()
    {

        model.Nombre = model.Nombre.ToUpper();
        model.Direccion = model.Direccion.ToUpper();


        if (Id != 0)
        {

            var result = await Http.PutAsJsonAsync<Empresa>($"empresas", model);
            response = result.Content.ReadFromJsonAsync<Response>().Result;
        }
        else
        {
            var result = await Http.PostAsJsonAsync<Empresa>($"empresas", model);
            response = result.Content.ReadFromJsonAsync<Response>().Result;
        }


        if (response.IsSuccessful)
        {
            response = await Http.GetFromJsonAsync<Response>($"Empresas/{singleton.EmpresaId}");
            dialogService.Close(response);
        }
        else
        {
            await js.InvokeAsync<string>("MensajeAlerta", response.Message);
        }

    }

    protected async Task Cancelar()
    {
        navigationManager.NavigateTo("/indexempresa");
    }


    protected async Task LoadData()
    {
        if (Id > 0)
        {
            titulo = "EDITAR EMPRESA";
            response = await Http.GetFromJsonAsync<Response>($"empresas/{Id}");
            if (response.IsSuccessful)
            {
                model = JsonConvert.DeserializeObject<List<Empresa>>(response.Data.ToString()).FirstOrDefault();
            }
        }
        else
        {
            titulo = "NUEVA EMPRESA";
        }
    }

}
