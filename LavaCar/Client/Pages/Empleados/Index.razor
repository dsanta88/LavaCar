@page "/empleado-index"
@using LavaCar.Shared
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject DialogService dialogService
@inject ServicioSingleton singleton
@using Newtonsoft.Json

<div class="row alert bg-info">
    <div class="col-md-5">
        <h5> <b>Empleados</b></h5>
    </div>
</div>


<RadzenButton Text=@("Nuevo") Click=@Add ButtonStyle="ButtonStyle.Success" />

<RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="20"
            AllowSorting="true" Data="@list" TItem="Usuario" ColumnWidth="200px">
    <Columns>
        <RadzenGridColumn TItem="Usuario" Property="FotoUrl" Title="Foto" Width="30%">
            <Template Context="model">
                <RadzenImage Path="@model.FotoUrl" Style="width:70px" />
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Usuario" Property="NombreCompleto" Title="Nombre" Width="50%"></RadzenGridColumn>
        <RadzenGridColumn TItem="Usuario" Property="Email" Title="Email" Width="50%"></RadzenGridColumn>
        <RadzenGridColumn TItem="Usuario" Property="Celular" Title="Celular" Width="40%"></RadzenGridColumn>
        <RadzenGridColumn TItem="Usuario" Property="Estado" Title="Estado">
            <Template Context="data">

                @if (data.Estado == "A")
                {
                    <RadzenCheckBox Value="true"
                                    TValue="bool">
                    </RadzenCheckBox>
                }
                else
                {
                    <RadzenCheckBox Value="false"
                                    TValue="bool">
                    </RadzenCheckBox>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Usuario" Property="SedeNombre" Title="Sede" Width="50%"></RadzenGridColumn>
        <RadzenGridColumn TItem="Usuario" Property="PerfilNombre" Title="Perfil" Width="50%"></RadzenGridColumn>
        <RadzenGridColumn TItem="Usuario" Context="Usuario" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Left" Width="100%">
            <Template Context="Usuario">
                <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="edit" Text="Editar" Size="ButtonSize.Medium" Click="@((args) =>Edit(Usuario.Id))">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="cancel" Text="Eliminar" Size="ButtonSize.Medium" Click="@((args) =>Delete(Usuario.Id))">
                </RadzenButton>
            </Template>
        </RadzenGridColumn>
    </Columns>

</RadzenGrid>


@code {
    private Response response;
    List<Usuario> list = new List<Usuario>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }


    public void Add()
    {
        OpenForm(0, "Nuevo Empleado");
    }

    void Edit(int id)
    {
        OpenForm(id, "Editar Empleado");
    }

    void Delete(int id)
    {
        OpenForm(id, "Eliminar Empleado");
    }


    void OpenForm(int id, string accion)
    {
        dialogService.Open<Form>(accion,
              new Dictionary<string, object>() { { "Id", id } },
              new DialogOptions() { Width = "900px", Height = "1100px" });

        dialogService.OnClose += RelaodDashBoard;
    }

    void RelaodDashBoard(dynamic result)
    {
        if (result != null)
        {
            list = JsonConvert.DeserializeObject<List<Usuario>>(result.Data.ToString());
            StateHasChanged();
        }

    }

    protected async Task LoadData()
    {
        //PerfilCodigo 3: Empleado
        response = await Http.GetFromJsonAsync<Response>($"Usuarios/GetUsuarioXSede/{singleton.SedeId}/{1}");
        if (response.IsSuccessful)
        {
            list = JsonConvert.DeserializeObject<List<Usuario>>(response.Data.ToString());
        }
    }
}

