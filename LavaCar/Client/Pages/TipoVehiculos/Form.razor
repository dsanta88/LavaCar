@page "/tipovehiculo-form"
@page "/tipovehiculo-form/{Id:int}/{SedeId}"
@using LavaCar.Shared
@using Newtonsoft.Json;
@using Helpers
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject IJSRuntime js
@inject DialogService dialogService
@inject ServicioSingleton singleton
@inject HttpClient http

<div class="row">
    <div class="col-md-12">
        <RadzenTemplateForm TItem="TipoVehiculo" Data=@model Submit="@Save">
            <RadzenFieldset Text="Tipo Vehiculo">
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Nombre" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Nombre)" Name="Nombre">
                        </RadzenTextBox><br />
                        <RadzenRequiredValidator Component="Nombre" Text="Campo Requerido" Style="position: absolute" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Estado" />
                    </div>
                    <div class="col-md-8">
                        <RadzenDropDown AllowClear="true" AllowFiltering="true" Name="Estado" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value="model.Estado" Multiple="false" Placeholder="Select..." Data="@lstEstados" TextProperty="Descripcion" ValueProperty="Codigo"
                                        Style="margin-bottom: 20px; width:100%;" /><br />
                        <RadzenRequiredValidator Component="Estado" Text="Campo Requerido" Style="position: absolute" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-5">
                        <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Guardar" ButtonStyle="ButtonStyle.Success">
                        </RadzenButton>
                    </div>
                    <div class="col-md-5">
                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="cancel" Text="Cancelar" Click="@Cancelar">
                        </RadzenButton>
                    </div>
                </div>
            </RadzenFieldset>
        </RadzenTemplateForm>
    </div>
</div>
<br />

<br />
@code {

    [Parameter] public int Id { get; set; }
    [Parameter] public int SedeId { get; set; }

    public TipoVehiculo model = new TipoVehiculo();
    Response response = new Response();
    public List<EstadoAuxiliar> lstEstados = new List<EstadoAuxiliar>();
    public Generico generico = new Generico();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }


    protected async Task Save()
    {
        model.SedeId = SedeId;
        model.Nombre = model.Nombre.ToUpper();


        if (Id != 0)
        {

            var result = await Http.PutAsJsonAsync<TipoVehiculo>($"TipoVehiculos", model);
            response = result.Content.ReadFromJsonAsync<Response>().Result;
        }
        else
        {

            var result = await Http.PostAsJsonAsync<TipoVehiculo>($"TipoVehiculos", model);
            response = result.Content.ReadFromJsonAsync<Response>().Result;
        }

        if (response.IsSuccessful)
        {
            response = await Http.GetFromJsonAsync<Response>($"TipoVehiculos/GetTipoVehiculosXSede/{SedeId}");
            dialogService.Close(response);
        }
        else
        {
            await js.InvokeAsync<string>("MensajeAlerta", response.Message);
        }
    }


    protected async Task Cancelar()
    {
        dialogService.Close();
    }



    protected async Task LoadData()
    {
        lstEstados = generico.getEstados();
        if (Id > 0)
        {
            response = await Http.GetFromJsonAsync<Response>($"TipoVehiculos/{Id}");
            if (response.IsSuccessful)
            {
                model = JsonConvert.DeserializeObject<TipoVehiculo>(response.Data.ToString());
            }
        }
    }

}
