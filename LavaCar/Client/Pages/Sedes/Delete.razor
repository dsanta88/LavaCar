@page "/deletesede/{Id:int}"
@using LavaCar.Shared
@inject HttpClient Http
@inject NavigationManager navigationManager
@using Newtonsoft.Json;
@inject IJSRuntime js
@inject DialogService dialogService
@inject ServicioSingleton singleton

<div class="row alert bg-info">
    <div class="row col-md-1">

    </div>
    <div class="col-md-5">
        <h5> <b>ELIMINAR SEDE</b></h5>
    </div>
</div>


<div class="row alert bg-warning">
    <div class="row col-md-1">

    </div>
    <div class="col-md-5">
        Esta  seguro de eliminar la sede?
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <RadzenTemplateForm TItem="Sede" Data=@model Submit="@Save">
            <RadzenFieldset Text="Sede">
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Nombre" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Nombre)" Name="Nombre" Disabled="true" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Dirección" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Direccion)" Name="Direccion" Disabled="true" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Teléfono" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Telefono)" Name="Telefono" Disabled="true" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Email" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox style="width: 100%" Name="Email" @bind-Value=@model.Email Disabled="true" />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <RadzenLabel Text="Celular" />
                    </div>
                    <div class="col-md-8">
                        <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@(model.Celular)" Name="Celular" Disabled="true" />
                    </div>
                </div>
                <br />

                <br />
                <div class="row">
                    <div class="col-md-2">
                    </div>
                    <div class="col-md-5">
                        <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Guardar" ButtonStyle="ButtonStyle.Success">
                        </RadzenButton>
                    </div>
                    <div class="col-md-4">
                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="cancel" Text="Cancelar" Click="@Cancelar">
                        </RadzenButton>
                    </div>
                </div>
            </RadzenFieldset>
        </RadzenTemplateForm>
    </div>
</div>
<br />


<br />
@code {

    [Parameter]
    public int Id { get; set; }
    public Sede model = new Sede();
    Response response = new Response();


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    protected async Task Save()
    {
        var result = await Http.DeleteAsync($"sedes/{Id}");
        response = result.Content.ReadFromJsonAsync<Response>().Result;

        if (response.IsSuccessful)
        {
            response = await Http.GetFromJsonAsync<Response>($"sedes/GetSedesxEmpresa/{singleton.EmpresaId}");
            dialogService.Close(response);
        }
        else
        {
            await js.InvokeAsync<string>("MensajeAlerta", response.Message);
        }

    }

    protected async Task Cancelar()
    {
        dialogService.Close();
    }


    protected async Task LoadData()
    {
        if (Id > 0)
        {
            response = await Http.GetFromJsonAsync<Response>($"sedes/{Id}");
            if (response.IsSuccessful)
            {
                model = JsonConvert.DeserializeObject<Sede>(response.Data.ToString());
            }
        }
    }
}
